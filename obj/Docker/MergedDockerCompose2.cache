services:
  adminer:
    depends_on:
      postgres:
        condition: service_started
    image: adminer
    ports:
    - published: 8080
      target: 8080
    restart: always
  narwianskizakatek:
    build:
      context: C:\Users\leszc\Desktop\NarwianskiZakatek
      dockerfile: NarwianskiZakatek/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: narwianskizakatek
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\leszc\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\leszc\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  postgres:
    environment:
      POSTGRES_DB: myDataBase
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
    image: postgres:latest
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - C:\Users\leszc\Desktop\NarwianskiZakatek\data:/var/lib/postgresql:rw
version: '3.4'